{"ast":null,"code":"var _jsxFileName = \"/Users/raphtalia/workspace/rails/5xruby/client/src/todoList.js\";\nimport React from 'react';\nexport class TodoList extends React.Component {\n  constructor() {\n    super();\n    this.remove = this.remove.bind(this);\n    this.done = this.done.bind(this);\n    this.changeList = this.changeList.bind(this);\n    this.state = {\n      activeList: 'All'\n    };\n  }\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom() {\n    var objDiv = document.getElementById('todoList');\n    var height = document.getElementById('todoList').scrollHeight;\n    objDiv.scrollTop = height;\n  }\n  /**\n   * task silmek için controller method\n   * controller method for removing task\n   * @param e\n   */\n\n\n  remove(e) {\n    this.props.removeTask(e.target.parentNode.id);\n  }\n  /**\n   * task statüsünü güncellemek için controller method\n   * controller method for changing the task status\n   * @param e\n   */\n\n\n  done(e) {\n    this.props.doneTask(e.target.parentNode.id);\n  }\n  /**\n   * Tümü, aktif yada tamamlanmış olanları listeler\n   * Toggle list All, Active or done\n   * @param e\n   */\n\n\n  changeList(e) {\n    var listChanger = document.getElementById('listChanger');\n    var li = listChanger.querySelectorAll('li');\n\n    for (let i = 0; i < li.length; i++) {\n      li[i].classList.remove('active');\n    }\n\n    var activeLi = e.target.parentNode;\n    activeLi.classList.add('active');\n    this.setState({\n      activeList: activeLi.innerText\n    });\n  }\n\n  render() {\n    let items_left = 0;\n    const items = this.props.myList.map((elem, i) => {\n      let task_id = 'task_' + i;\n\n      if (this.state.activeList === 'All' || this.state.activeList === 'Active' && elem.status === 'passive' || this.state.activeList === 'Completed' && elem.status === 'active') {\n        if (elem.status === 'passive') {\n          items_left++;\n        }\n\n        return React.createElement(\"li\", {\n          key: i,\n          id: task_id,\n          className: elem.status,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, i + 1), React.createElement(\"span\", {\n          className: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, elem.text), React.createElement(\"span\", {\n          className: \"type\",\n          onClick: this.done,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"delete\",\n          onClick: this.remove,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }));\n      }\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"todoList\",\n      className: \"todo-list type1\",\n      style: {\n        height: 310,\n        overflowY: 'scroll'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, items)), React.createElement(\"div\", {\n      className: \"todo-filter type1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, items_left), \" items left\")), React.createElement(\"div\", {\n      className: \"right\",\n      id: \"listChanger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"active\",\n      onClick: this.changeList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"All\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.changeList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Active\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.changeList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Completed\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/raphtalia/workspace/rails/5xruby/client/src/todoList.js"],"names":["React","TodoList","Component","constructor","remove","bind","done","changeList","state","activeList","componentDidMount","scrollToBottom","objDiv","document","getElementById","height","scrollHeight","scrollTop","e","props","removeTask","target","parentNode","id","doneTask","listChanger","li","querySelectorAll","i","length","classList","activeLi","add","setState","innerText","render","items_left","items","myList","map","elem","task_id","status","text","overflowY"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport class TodoList extends React.Component {\n    constructor() {\n        super();\n        this.remove = this.remove.bind(this);\n        this.done = this.done.bind(this);\n        this.changeList = this.changeList.bind(this);\n        this.state = { activeList: 'All' };\n    }\n\n    componentDidMount() {\n        this.scrollToBottom();\n    }\n\n    scrollToBottom() {\n        var objDiv = document.getElementById('todoList');\n        var height = document.getElementById('todoList').scrollHeight;\n        objDiv.scrollTop = height\n    }\n\n    /**\n     * task silmek için controller method\n     * controller method for removing task\n     * @param e\n     */\n    remove(e) {\n        this.props.removeTask(e.target.parentNode.id);\n    }\n\n\n    /**\n     * task statüsünü güncellemek için controller method\n     * controller method for changing the task status\n     * @param e\n     */\n    done(e) {\n        this.props.doneTask(e.target.parentNode.id);\n    }\n\n    /**\n     * Tümü, aktif yada tamamlanmış olanları listeler\n     * Toggle list All, Active or done\n     * @param e\n     */\n    changeList(e) {\n        var listChanger = document.getElementById('listChanger');\n        var li = listChanger.querySelectorAll('li');\n        for (let i = 0; i < li.length; i++) {\n            li[i].classList.remove('active');\n        }\n        var activeLi = e.target.parentNode;\n        activeLi.classList.add('active');\n        this.setState({ activeList: activeLi.innerText });\n    }\n\n    render() {\n        let items_left = 0;\n        const items = this.props.myList.map((elem, i) => {\n            let task_id = 'task_' + i;\n            if (\n                this.state.activeList === 'All' ||\n                (this.state.activeList === 'Active' && elem.status === 'passive') ||\n                (this.state.activeList === 'Completed' && elem.status === 'active')\n            ) {\n                if (elem.status === 'passive') { items_left++; }\n                return (\n                    <li key={i} id={task_id} className={elem.status}>\n                        <span className=\"id\">{i + 1}</span>\n                        <span className=\"title\">{elem.text}</span>\n                        <span className=\"type\" onClick={this.done} />\n                        <span className=\"delete\" onClick={this.remove}></span>\n                    </li>\n\n                )\n            }\n        });\n        return (\n            <div>\n                <div id=\"todoList\" className=\"todo-list type1\"\n                    style={{\n                        height: 310,\n                        overflowY: 'scroll',\n                    }}>\n                    <ul>\n                        {items}\n                    </ul>\n                </div>\n                <div className=\"todo-filter type1\">\n                    <div className=\"left\">\n                        <span><b>{items_left}</b> items left</span>\n                    </div>\n                    <div className=\"right\" id=\"listChanger\">\n                        <ul>\n                            <li className=\"active\" onClick={this.changeList}><span>All</span></li>\n                            <li><span onClick={this.changeList}>Active</span></li>\n                            <li><span onClick={this.changeList}>Completed</span></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}