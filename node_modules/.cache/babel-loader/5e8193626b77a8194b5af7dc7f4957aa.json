{"ast":null,"code":"var _jsxFileName = \"/Users/raphtalia/workspace/rails/5xruby/client/src/login.js\";\nimport React from 'react';\nexport class Login extends React.Component {\n  constructor() {\n    super();\n    this.doLogin = this.doLogin.bind(this);\n    this.state = {\n      isRegister: false\n    };\n  }\n\n  doLogin() {\n    const userName = document.getElementById('username').value;\n    const password = document.getElementById('password').value;\n\n    if (userName !== '' && password !== '') {\n      // const uri = 'http://127.0.0.1:3000/login'\n      const uri = 'https://fivexruby-server.herokuapp.com/login';\n      fetch(uri, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          'Username': userName,\n          'Password': password\n        })\n      }).then(response => response.json().then(data => ({\n        data: data,\n        status: response.status\n      }))).then(res => {\n        if (res.status === 401) {\n          alert('ユーザ名かパスワードが間違っています');\n        } else {\n          if (res.data.token) {\n            localStorage.setItem('token', res.data.token);\n          }\n\n          setTimeout(() => {\n            this.props.doLogin(userName);\n            window.location.reload();\n          }, 1000);\n        }\n      });\n    } else {\n      alert('ユーザーネームとパスワードを入力してください');\n    }\n  }\n\n  doRegister() {\n    const userName = document.getElementById('username').value;\n    const password = document.getElementById('password').value;\n    const repeatPassword = document.getElementById('repeatPassword').value;\n\n    if (userName !== '' && password !== '') {\n      if (password === repeatPassword) {\n        // const uri = 'http://127.0.0.1:3000/signup'\n        const uri = 'https://fivexruby-server.herokuapp.com/signup';\n        fetch(uri, {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json'\n          },\n          body: JSON.stringify({\n            'username': userName,\n            'password': password\n          })\n        }).then(response => response.json().then(data => ({\n          data: data,\n          status: response.status\n        }))).then(res => {\n          if (res.status === 409) {\n            alert('エラー ユーザー名は既に存在します');\n          } else {\n            setTimeout(() => {\n              this.setState({\n                isRegister: false\n              });\n            }, 1000);\n          }\n        });\n      } else {\n        alert('check password');\n      }\n    } else {\n      alert('ユーザーネームとパスワードを入力してください');\n    }\n  }\n\n  render() {\n    const isRegister = this.state.isRegister;\n\n    if (isRegister) {\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"logo\",\n        alt: \"todo\",\n        title: \"todo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"login type1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"textbox\",\n        type: \"text\",\n        name: \"username\",\n        id: \"username\",\n        placeholder: \"username or email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"textbox\",\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"textbox\",\n        type: \"password\",\n        name: \"password\",\n        id: \"repeatPassword\",\n        placeholder: \"repeat password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"login-options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"login-btn\",\n        onClick: e => this.setState({\n          isRegister: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"\\u4EE3\\u308F\\u308A\\u306B\\u30ED\\u30B0\\u30A4\\u30F3\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"login-btn\",\n        onClick: this.doRegister,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"\\u767B\\u9332\")));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      className: \"logo\",\n      alt: \"todo\",\n      title: \"todo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"login type1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"textbox\",\n      type: \"text\",\n      name: \"username\",\n      id: \"username\",\n      placeholder: \"username or email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"textbox\",\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"login-options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"login-btn\",\n      onClick: this.doLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"\\u30ED\\u30B0\\u30A4\\u30F3\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"login-btn\",\n      onClick: e => this.setState({\n        isRegister: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"\\u767B\\u9332\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/raphtalia/workspace/rails/5xruby/client/src/login.js"],"names":["React","Login","Component","constructor","doLogin","bind","state","isRegister","userName","document","getElementById","value","password","uri","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","data","status","res","alert","token","localStorage","setItem","setTimeout","props","window","location","reload","doRegister","repeatPassword","setState","render","e"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nexport class Login extends React.Component {\n    constructor() {\n        super();\n        this.doLogin = this.doLogin.bind(this);\n        this.state = ({\n            isRegister: false\n        })\n    }\n\n    doLogin() {\n        const userName = document.getElementById('username').value;\n        const password = document.getElementById('password').value;\n        if (userName !== '' && password !== '') {\n            // const uri = 'http://127.0.0.1:3000/login'\n            const uri = 'https://fivexruby-server.herokuapp.com/login'\n            fetch(uri, {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Accept: 'application/json'\n                },\n                body: JSON.stringify({\n                    'Username': userName,\n                    'Password': password\n                })\n            })\n                .then(\n                    response =>\n                        response.json().then(data => ({\n                            data: data,\n                            status: response.status\n                        }))\n                )\n                .then(res => {\n                    if (res.status === 401) {\n                        alert('ユーザ名かパスワードが間違っています');\n                    } else {\n                        if (res.data.token) {\n                            localStorage.setItem('token', res.data.token)\n                        }\n                        setTimeout(() => {\n                            this.props.doLogin(userName);\n                            window.location.reload();\n                        }, 1000)\n                    }\n                })\n        } else {\n            alert('ユーザーネームとパスワードを入力してください');\n        }\n    }\n\n    doRegister() {\n        const userName = document.getElementById('username').value;\n        const password = document.getElementById('password').value;\n        const repeatPassword = document.getElementById('repeatPassword').value;\n        if (userName !== '' && password !== '') {\n            if (password === repeatPassword) {\n                // const uri = 'http://127.0.0.1:3000/signup'\n                const uri = 'https://fivexruby-server.herokuapp.com/signup'\n                fetch(uri, {\n                    method: 'post',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Accept: 'application/json'\n                    },\n                    body: JSON.stringify({\n                        'username': userName,\n                        'password': password\n                    })\n                })\n                    .then(\n                        response =>\n                            response.json().then(data => ({\n                                data: data,\n                                status: response.status\n                            }))\n                    )\n                    .then(res => {\n                        if (res.status === 409) {\n                            alert('エラー ユーザー名は既に存在します');\n                        } else {\n                            setTimeout(() => {\n                                this.setState({\n                                    isRegister: false\n                                })\n                            }, 1000)\n                        }\n                    })\n            } else {\n                alert('check password')\n            }\n        } else {\n            alert('ユーザーネームとパスワードを入力してください');\n        }\n    }\n\n    render() {\n        const isRegister = this.state.isRegister;\n        if (isRegister) {\n            return (\n                <div className=\"content\">\n                    <div className=\"img\">\n                        <a href=\"#\" className=\"logo\" alt=\"todo\" title=\"todo\" />\n                    </div>\n                    <div className=\"login type1\">\n                        <div className=\"input-wrapper\">\n                            <i className=\"icon username\" />\n                            <input className=\"textbox\" type=\"text\" name=\"username\" id=\"username\" placeholder=\"username or email\" />\n                        </div>\n                        <div className=\"input-wrapper\">\n                            <i className=\"icon password\" />\n                            <input className=\"textbox\" type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" />\n                        </div>\n                        <div className=\"input-wrapper\">\n                            <i className=\"icon password\" />\n                            <input className=\"textbox\" type=\"password\" name=\"password\" id=\"repeatPassword\" placeholder=\"repeat password\" />\n                        </div>\n                    </div>\n                    <div className=\"login-options\">\n                        <button type=\"button\" className=\"login-btn\"\n                            onClick={(e) => this.setState({ isRegister: false })}>代わりにログイン</button>\n                        <button type=\"button\" className=\"login-btn\" onClick={this.doRegister}>登録</button>\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div className=\"content\">\n                <div className=\"img\">\n                    <a href=\"#\" className=\"logo\" alt=\"todo\" title=\"todo\" />\n                </div>\n                <div className=\"login type1\">\n                    <div className=\"input-wrapper\">\n                        <i className=\"icon username\" />\n                        <input className=\"textbox\" type=\"text\" name=\"username\" id=\"username\" placeholder=\"username or email\" />\n                    </div>\n                    <div className=\"input-wrapper\">\n                        <i className=\"icon password\" />\n                        <input className=\"textbox\" type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" />\n                    </div>\n                </div>\n                <div className=\"login-options\">\n                    <button type=\"button\" className=\"login-btn\" onClick={this.doLogin}>ログイン</button>\n                    <button type=\"button\" className=\"login-btn\"\n                        onClick={(e) => this.setState({ isRegister: true })}>登録</button>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}